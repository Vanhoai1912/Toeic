@model ToeicWeb.Models.ViewModels.TracNghiemViewModel

<!-- Tiêu đề -->
<div class="col-12 text-center">
    <h2>@Model.BaiTap.Tieu_de</h2>
    @* <button class="btn btn-secondary">Thoát</button> *@
</div>
<div class="container rounded-4" style="max-width: 1220px;box-shadow: 0 2px 4px rgba(0, 0, 0, .08), 0 4px 12px rgba(0, 0, 0, .08);margin-left: -6rem;">
    <div class="row">
       
        <!-- Phần bài làm (câu hỏi) bên trái -->
        <p class="mt-xxl-3">
            <span class="badge rounded-4 bg-primary">
                 Part @Model.BaiTap.Part 
            </span>
        </p>
        <!-- Phần bài làm (câu hỏi) bên trái -->
        <div class="col-md-8">
            <!-- Form câu   ỏi -->
            <form asp-action="ResultPart5" method="post" id="tracNghiemForm">
                @for (int i = 0; i < Model.CauHoiList.Count; i++)
                {
                    <div class="question-block" id="question_@Model.CauHoiList[i].Id" style="padding: 10px; margin-bottom: 30px;">
                        <p><b>@Model.CauHoiList[i].Thu_tu_cau. @Model.CauHoiList[i].Cau_hoi</b></p>

                        @{
                            var options = new[]
                            {
                    new { Letter = "A", Text = Model.CauHoiList[i].Dap_an_1 },
                    new { Letter = "B", Text = Model.CauHoiList[i].Dap_an_2 },
                    new { Letter = "C", Text = Model.CauHoiList[i].Dap_an_3 },
                    new { Letter = "D", Text = Model.CauHoiList[i].Dap_an_4 }
                    };
                        }

                        @* Hiển thị các đáp án với ký hiệu *@
                        @for (int j = 0; j < options.Length; j++)
                        {
                            <div>
                                <input type="radio" name="cauHoi_@Model.CauHoiList[i].Id" value="@options[j].Text" onchange="markAsSelected(@Model.CauHoiList[i].Id)" />
                                <label>@options[j].Letter. @options[j].Text</label>
                            </div>
                        }

                        @* Input ẩn để đánh dấu câu hỏi đã được hiển thị *@
                        <input type="hidden" name="questionIds" value="@Model.CauHoiList[i].Id" />
                    </div>
                }
            </form>

        </div>
    </div>
</div>

<!-- Phần thời gian và danh sách câu hỏi bên phải -->
<div style="position: fixed; top: 130px; right: 10px; width: 250px; box-shadow: 0 2px 4px rgba(0, 0, 0, .08), 0 4px 12px rgba(0, 0, 0, .08); border-radius: 10px; padding: 18px;">
    <!-- Hiển thị thời gian làm bài -->
    <div style="margin-bottom: 20px;">
        <label>Thời gian làm bài:</label>
        <div id="timer" style="font-size: 24px">00:00</div>
    </div>

    <!-- Nút nộp bài -->
    <button type="button" class="btn btn-primary mb-3 text-light rounded-3" onclick="confirmSubmission()">NỘP BÀI</button>

    <p style="color: orange; font-size: 12px;">
        Chú ý: bạn có thể click vào số thứ tự câu hỏi trong bảng để đánh dấu review
    </p>

    <!-- Danh sách câu hỏi -->
    <div>
        <label>Danh sách câu hỏi:</label>
        <div style="display: flex; flex-wrap: wrap;">
            @for (int i = 0; i < Model.CauHoiList.Count; i++)
            {
                <button id="btn_@Model.CauHoiList[i].Id" class="m-1 rounded-3" style="background-color: #fff;font-size: 0.75rem;" onclick="scrollToQuestion(@Model.CauHoiList[i].Id)">
                    @Model.CauHoiList[i].Thu_tu_cau
                </button>
            }
        </div>
    </div>
</div>


<script>
    var elapsedTime = 0;  // Bắt đầu từ 0 giây
    var timerElement = document.getElementById('timer');
    var interval;

    function startTimer() {
        if (interval) return; // Ngăn việc thiết lập lại nhiều lần

        interval = setInterval(function() {
            var minutes = Math.floor(elapsedTime / 60);
            var seconds = elapsedTime % 60;

            // Thêm số 0 nếu giây < 10
            seconds = seconds < 10 ? "0" + seconds : seconds;
            minutes = minutes < 10 ? "0" + minutes : minutes;

            // Hiển thị thời gian đã trôi qua
            timerElement.textContent = minutes + ":" + seconds;

            elapsedTime++;
        }, 1000);  // Cập nhật mỗi giây
    }

    // Khi trang PracticePart5 được tải, bắt đầu đồng hồ
    window.onload = function() {
        startTimer();
    };

    // Đánh dấu câu hỏi đã chọn
    function markAsSelected(questionId) {
        var button = document.getElementById('btn_' + questionId);
        if (button.style.backgroundColor === '#3b4f95') {
            button.style.backgroundColor = '#fff';
        } else {
            button.style.backgroundColor = '#3b4f95';
            button.style.color = '#fff';
        }
    }


    // Scroll tới câu hỏi khi nhấn vào nút
    function scrollToQuestion(questionId) {
        document.getElementById('question_' + questionId).scrollIntoView({ behavior: 'smooth' });
    }

    // nút nộp bài
    function confirmSubmission() {
        Swal.fire({
            title: "Bạn có chắc muốn nộp bài?",
            text: "Bài làm sẽ không thể thay đổi!",
            icon: "warning",
            showCancelButton: true,
            confirmButtonColor: "#3085d6",
            cancelButtonColor: "#d33",
            confirmButtonText: "Nộp bài",
            cancelButtonText: "Hủy"
        }).then((result) => {
            if (result.isConfirmed) {
                // Hiển thị thông báo thành công với thời gian
                Swal.fire({
                    title: "Đã nộp bài!",
                    text: "Bài làm của bạn đã được nộp.",
                    icon: "success",
                    timer: 2000, // Thời gian hiển thị thông báo thành công (1500 ms = 1.5 giây)
                    timerProgressBar: true,
                    didClose: () => {
                        // Sau khi thông báo thành công bị đóng, nộp form
                        document.getElementById('tracNghiemForm').submit();
                    }
                });
            }
        });
    }
</script>

