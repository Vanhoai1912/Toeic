@model Tuple<List<Ma_bai_thi>, List<int>> // Sử dụng tuple để nhận cả hai danh sách

@{
    var mabaitaps = Model.Item1; // Danh sách bài thi
    var completedTests = Model.Item2; // Danh sách bài thi đã làm
}

@for (int i = 0; i < mabaitaps.Count; i++)
{
    if (mabaitaps[i].ExamType == "TH")
    {
        <a class="col-lg-3 col-sm-6 text-decoration-none"
           asp-area="Customer"
           asp-controller="Thi"
           asp-action="PracticeTH"
           asp-route-baiTapId="@mabaitaps[i].Id"
           onclick="return handleExamClick(event, @Html.Raw(User.Identity.IsAuthenticated.ToString().ToLower()), '@Url.Action("Login", "Account", new { Area = "Identity" })', '@mabaitaps[i].Id');">
            <div class="col d-sm-flex justify-content-sm-center">
                <div class="col-8 p-1 border-primary mb-3 hV">
                    <div class="shadow border rounded bgC">
                        <div class="pb-0">
                            <div class="pl-1 m-2 mx-3 ">
                                <p class="text-dark mb-2"><b>@mabaitaps[i].Tieu_de</b></p>
                                <div class="d-lg-flex justify-content-lg-between">
                                    <p class="">
                                        <span class="badge rounded-pill bg-primary">
                                            2024 Format
                                        </span>
                                    </p>
                                    @if (completedTests.Contains(mabaitaps[i].Id)) // Kiểm tra bài thi đã làm
                                    {
                                        <p class="text-success mt-2"><i>Bài thi đã làm</i></p>
                                    }
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </a>
    }
}
<script>
    function handleExamClick(event, isLoggedIn, loginUrl, baiTapId) {
        console.log("BaiTapId: ", baiTapId);  // Kiểm tra giá trị ID

        // Nếu ID của bài tập là undefined hoặc null
        if (!baiTapId || baiTapId === "undefined" || baiTapId === "") {
            event.preventDefault();  // Ngăn chặn điều hướng
            Swal.fire({
                title: "Lỗi",
                text: "Không tìm thấy ID bài tập!",
                icon: "error",
                confirmButtonText: "OK"
            });
            return false;
        }

        // Nếu người dùng chưa đăng nhập
        if (!isLoggedIn) {
            event.preventDefault();  // Ngăn chặn điều hướng
            Swal.fire({
                title: "Thông báo",
                text: "Bạn chưa đăng nhập, kết quả sẽ không được lưu.",
                icon: "info",
                showCancelButton: true,
                confirmButtonText: "Làm bài",
                cancelButtonText: "Đăng nhập",
            }).then((result) => {
                if (result.isConfirmed) {
                    // Nếu nhấn "Làm bài", điều hướng đến bài thi với `baiTapId` đúng
                    window.location.href = `/Customer/Thi/PracticeTH?baiTapId=${baiTapId}`;  // Sử dụng template string
                } else if (result.isDismissed) {
                    // Nếu nhấn "Đăng nhập", chuyển đến trang đăng nhập
                    window.location.href = loginUrl;  // Điều hướng đến trang đăng nhập
                }
            });
            return false;  // Không thực hiện hành động mặc định
        }

        // Nếu đã đăng nhập và ID hợp lệ, cho phép điều hướng
        return true;
    }


</script>
