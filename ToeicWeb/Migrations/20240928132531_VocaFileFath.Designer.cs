// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ToeicWeb.Data;

#nullable disable

namespace ToeicWeb.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240928132531_VocaFileFath")]
    partial class VocaFileFath
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0-preview.7.24405.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(21)
                        .HasColumnType("nvarchar(21)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasDiscriminator().HasValue("IdentityUser");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("ToeicWeb.Models.Cau_hoi_bai_tap_doc", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Bai_doc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cau_hoi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Dap_an_1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Dap_an_2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Dap_an_3")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Dap_an_4")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Dap_an_dung")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Giai_thich")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Giai_thich_bai_doc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsCorrect")
                        .HasColumnType("bit");

                    b.Property<int>("Ma_bai_tap_docId")
                        .HasColumnType("int");

                    b.Property<int>("Thu_tu_cau")
                        .HasColumnType("int");

                    b.Property<string>("UserAnswer")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Ma_bai_tap_docId");

                    b.ToTable("Cauhoibaitapdocs");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Bai_doc = "",
                            Cau_hoi = "H",
                            Dap_an_1 = "A",
                            Dap_an_2 = "B",
                            Dap_an_3 = "C",
                            Dap_an_4 = "D",
                            Dap_an_dung = "A",
                            Giai_thich = "A ĐÚNG",
                            IsCorrect = false,
                            Ma_bai_tap_docId = 1,
                            Thu_tu_cau = 101
                        });
                });

            modelBuilder.Entity("ToeicWeb.Models.Cau_hoi_bai_tap_nge", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Audio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cau_hoi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Dap_an_1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Dap_an_2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Dap_an_3")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Dap_an_4")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Dap_an_dung")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Giai_thich")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsCorrect")
                        .HasColumnType("bit");

                    b.Property<int>("Ma_bai_tap_ngeId")
                        .HasColumnType("int");

                    b.Property<int>("Thu_tu_cau")
                        .HasColumnType("int");

                    b.Property<string>("Transcript")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserAnswer")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Ma_bai_tap_ngeId");

                    b.ToTable("Cauhoibaitapnges");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Audio = "",
                            Cau_hoi = "H",
                            Dap_an_1 = "A",
                            Dap_an_2 = "B",
                            Dap_an_3 = "C",
                            Dap_an_4 = "D",
                            Dap_an_dung = "A",
                            Giai_thich = "A ĐÚNG",
                            Image = "",
                            IsCorrect = false,
                            Ma_bai_tap_ngeId = 1,
                            Thu_tu_cau = 1
                        });
                });

            modelBuilder.Entity("ToeicWeb.Models.Ma_bai_tap_doc", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("FilePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Part")
                        .HasColumnType("int");

                    b.Property<string>("Tieu_de")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Mabaitapdocs");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FilePath = "",
                            Part = 5,
                            Tieu_de = "Tiêu đề"
                        },
                        new
                        {
                            Id = 2,
                            FilePath = "",
                            Part = 6,
                            Tieu_de = "Tiêu đề"
                        },
                        new
                        {
                            Id = 3,
                            FilePath = "",
                            Part = 7,
                            Tieu_de = "Tiêu đề"
                        });
                });

            modelBuilder.Entity("ToeicWeb.Models.Ma_bai_tap_nge", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("FilePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Part")
                        .HasColumnType("int");

                    b.Property<string>("Tieu_de")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Mabaitapnges");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Part = 1,
                            Tieu_de = "Tiêu đề"
                        },
                        new
                        {
                            Id = 2,
                            Part = 2,
                            Tieu_de = "Tiêu đề"
                        },
                        new
                        {
                            Id = 3,
                            Part = 3,
                            Tieu_de = "Tiêu đề"
                        },
                        new
                        {
                            Id = 4,
                            Part = 4,
                            Tieu_de = "Tiêu đề"
                        });
                });

            modelBuilder.Entity("ToeicWeb.Models.Ma_bai_tu_vung", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("FilePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ten_bai")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Mabaituvungs");
                });

            modelBuilder.Entity("ToeicWeb.Models.Noi_dung_bai_tu_vung", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Audio")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Ma_bai_tu_vungId")
                        .HasColumnType("int");

                    b.Property<string>("Nghia")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phien_am")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("So_thu_tu")
                        .HasColumnType("int");

                    b.Property<string>("Tu_dong_nghia")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tu_trai_nghia")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tu_vung")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Vi_du")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Ma_bai_tu_vungId");

                    b.ToTable("Noidungbaituvungs");
                });

            modelBuilder.Entity("ToeicWeb.Models.ApplicationUser", b =>
                {
                    b.HasBaseType("Microsoft.AspNetCore.Identity.IdentityUser");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("ApplicationUser");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ToeicWeb.Models.Cau_hoi_bai_tap_doc", b =>
                {
                    b.HasOne("ToeicWeb.Models.Ma_bai_tap_doc", "Ma_bai_tap_doc")
                        .WithMany("CauHoiBaiTapDocs")
                        .HasForeignKey("Ma_bai_tap_docId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ma_bai_tap_doc");
                });

            modelBuilder.Entity("ToeicWeb.Models.Cau_hoi_bai_tap_nge", b =>
                {
                    b.HasOne("ToeicWeb.Models.Ma_bai_tap_nge", "Ma_bai_tap_nge")
                        .WithMany("CauHoiBaiTapNges")
                        .HasForeignKey("Ma_bai_tap_ngeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ma_bai_tap_nge");
                });

            modelBuilder.Entity("ToeicWeb.Models.Noi_dung_bai_tu_vung", b =>
                {
                    b.HasOne("ToeicWeb.Models.Ma_bai_tu_vung", "Ma_bai_tu_vung")
                        .WithMany("Noidungbaituvungs")
                        .HasForeignKey("Ma_bai_tu_vungId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ma_bai_tu_vung");
                });

            modelBuilder.Entity("ToeicWeb.Models.Ma_bai_tap_doc", b =>
                {
                    b.Navigation("CauHoiBaiTapDocs");
                });

            modelBuilder.Entity("ToeicWeb.Models.Ma_bai_tap_nge", b =>
                {
                    b.Navigation("CauHoiBaiTapNges");
                });

            modelBuilder.Entity("ToeicWeb.Models.Ma_bai_tu_vung", b =>
                {
                    b.Navigation("Noidungbaituvungs");
                });
#pragma warning restore 612, 618
        }
    }
}
